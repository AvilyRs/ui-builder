{
  "version": 3,
  "sources": ["../UIBuilder.ts", "../index.ts"],
  "sourcesContent": ["interface ElementProperties {\n  name: string;\n  value: string;\n}\n\ninterface UIElement {\n  tagElement: string;\n  text?: string;\n  properties?: ElementProperties[];\n  children?: UIBuilder[];\n}\n\nexport class UIBuilder {\n  public UIProperties: UIElement = {} as UIElement;\n  public element: HTMLElement = {} as HTMLElement;\n\n  constructor(element: UIElement) {\n    this.UIProperties = element;\n    this.element = this.buildElement(element);\n  }\n\n  buildElement(element: UIElement) {\n    const createdElement = document.createElement(element.tagElement);\n    const createdElementText = element.text && document.createTextNode(element.text);\n\n    if (!!createdElementText) {\n      createdElement.appendChild(createdElementText);\n    }\n\n    if (!!element.children) {\n      this.buildChildrenElements(createdElement, element.children);\n    }\n\n    this.setProperties(createdElement, element.properties!);\n\n    return createdElement;\n  }\n\n  buildChildrenElements(targetElement: HTMLElement, elements: UIBuilder[]) {\n    elements.forEach(element => {\n      const createdElement = this.buildElement(element.UIProperties);\n      targetElement.appendChild(createdElement);\n    })\n  }\n\n  setProperties(targetElement: HTMLElement, properties: ElementProperties[]) {\n    if (properties !== undefined) {\n      properties.forEach(property => {\n        targetElement.setAttribute(property.name, property.value);\n      })\n    }\n  }\n}\n", "import { UIBuilder } from \"./UIBuilder\"\n\nconst button = new UIBuilder({\n  tagElement: \"button\",\n  text: \"Bot\u00E3o\",\n  properties: [\n    {\n      name: \"onclick\",\n      value: \"alert('alertando')\"\n    },\n    {\n      name: \"style\",\n      value: `\n        font-family: Arial, sans-serif;\n        font-size: 1.5rem;\n        border-radius: 8px;\n        padding: 1rem 1.5rem;\n      `\n    }\n  ]\n});\n\nconst paragraph = new UIBuilder({\n  tagElement: \"button\",\n  text: \"Paragraph\",\n  properties: [\n    {\n      name: \"style\",\n      value: `\n        font-family: Arial, sans-serif;\n        font-size: 1.5rem;\n      `\n    }\n  ]\n});\n\nconst section = new UIBuilder({\n  tagElement: \"section\",\n  children: [\n    button,\n    paragraph\n  ]\n});\n\nconst main = new UIBuilder({\n  tagElement: \"main\",\n  children: [\n    section\n  ]\n});\n\nconst root = document.getElementById(\"root\");\nroot?.appendChild(main.element);"],
  "mappings": "mBAYO,IAAMA,EAAN,KAAgB,CAIrB,YAAYC,EAAoB,CAHhC,KAAO,aAA0B,CAAC,EAClC,KAAO,QAAuB,CAAC,EAG7B,KAAK,aAAeA,EACpB,KAAK,QAAU,KAAK,aAAaA,CAAO,CAC1C,CAEA,aAAaA,EAAoB,CAC/B,IAAMC,EAAiB,SAAS,cAAcD,EAAQ,UAAU,EAC1DE,EAAqBF,EAAQ,MAAQ,SAAS,eAAeA,EAAQ,IAAI,EAE/E,OAAME,GACJD,EAAe,YAAYC,CAAkB,EAGzCF,EAAQ,UACZ,KAAK,sBAAsBC,EAAgBD,EAAQ,QAAQ,EAG7D,KAAK,cAAcC,EAAgBD,EAAQ,UAAW,EAE/CC,CACT,CAEA,sBAAsBE,EAA4BC,EAAuB,CACvEA,EAAS,QAAQJ,GAAW,CAC1B,IAAMC,EAAiB,KAAK,aAAaD,EAAQ,YAAY,EAC7DG,EAAc,YAAYF,CAAc,CAC1C,CAAC,CACH,CAEA,cAAcE,EAA4BE,EAAiC,CACrEA,IAAe,QACjBA,EAAW,QAAQC,GAAY,CAC7BH,EAAc,aAAaG,EAAS,KAAMA,EAAS,KAAK,CAC1D,CAAC,CAEL,CACF,EClDA,IAAMC,EAAS,IAAIC,EAAU,CAC3B,WAAY,SACZ,KAAM,WACN,WAAY,CACV,CACE,KAAM,UACN,MAAO,oBACT,EACA,CACE,KAAM,QACN,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA,OAMT,CACF,CACF,CAAC,EAEKC,EAAY,IAAID,EAAU,CAC9B,WAAY,SACZ,KAAM,YACN,WAAY,CACV,CACE,KAAM,QACN,MAAO;AAAA;AAAA;AAAA,OAIT,CACF,CACF,CAAC,EAEKE,EAAU,IAAIF,EAAU,CAC5B,WAAY,UACZ,SAAU,CACRD,EACAE,CACF,CACF,CAAC,EAEKE,EAAO,IAAIH,EAAU,CACzB,WAAY,OACZ,SAAU,CACRE,CACF,CACF,CAAC,EAEKE,EAAO,SAAS,eAAe,MAAM,EAC3CA,GAAM,YAAYD,EAAK,OAAO",
  "names": ["UIBuilder", "element", "createdElement", "createdElementText", "targetElement", "elements", "properties", "property", "button", "UIBuilder", "paragraph", "section", "main", "root"]
}
